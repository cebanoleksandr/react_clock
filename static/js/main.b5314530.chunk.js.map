{"version":3,"sources":["components/Clock/Clock.tsx","App.tsx","index.tsx"],"names":["getRandomName","value","Date","now","toString","slice","Clock","state","today","clockName","timerId","timerId2","setClockName","setState","setTime","this","window","setInterval","clearInterval","className","toUTCString","React","Component","App","hasClock","toggleClock","event","preventDefault","prevState","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAEA,SAASA,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWC,OAAO,GAE3C,MAAM,SAAN,OAAgBJ,GAQX,IAAMK,EAAb,4MACEC,MAAe,CACbC,MAAO,IAAIN,KACXO,UAAW,WAHf,EAMEC,QAAU,EANZ,EAQEC,SAAW,EARb,EAoBEC,aAAe,WACb,EAAKC,SAAS,CACZJ,UAAWT,OAtBjB,EA0BEc,QAAU,WACR,EAAKD,SAAS,CACZL,MAAO,IAAIN,QA5BjB,uDAUE,WACEa,KAAKL,QAAUM,OAAOC,YAAYF,KAAKH,aAAc,MACrDG,KAAKJ,SAAWK,OAAOC,YAAYF,KAAKD,QAAS,OAZrD,kCAeE,WACEI,cAAcH,KAAKL,SACnBQ,cAAcH,KAAKJ,YAjBvB,oBAgCE,WACE,MAA6BI,KAAKR,MAA1BC,EAAR,EAAQA,MAAOC,EAAf,EAAeA,UAEf,OACE,sBAAKU,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGV,IAGF,YAED,sBAAMU,UAAU,cAAhB,SACGX,EAAMY,cAAcf,OAAO,IAAK,YA5C3C,GAA2BgB,IAAMC,WCLpBC,EAAb,4MACEhB,MAAe,CACbiB,UAAU,GAFd,EAaEC,YAAc,SAACC,GACbA,EAAMC,iBAEN,EAAKd,UAAS,SAAAe,GAAS,MAAK,CAC1BJ,UAAWI,EAAUJ,cAjB3B,uDAKE,WACEK,SAASC,iBAAiB,cAAef,KAAKU,eANlD,kCASE,WACEI,SAASE,oBAAoB,cAAehB,KAAKU,eAVrD,oBAqBE,WACE,OACE,sBAAKN,UAAU,MAAf,UACE,6CACCJ,KAAKR,MAAMiB,UAAY,cAAC,EAAD,WAzBhC,GAAyBH,IAAMC,WCL/BU,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.b5314530.chunk.js","sourcesContent":["import React from 'react';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\ntype State = {\n  today: Date,\n  clockName: string,\n};\n\nexport class Clock extends React.Component {\n  state: State = {\n    today: new Date(),\n    clockName: 'Clock-0',\n  };\n\n  timerId = 0;\n\n  timerId2 = 0;\n\n  componentDidMount() {\n    this.timerId = window.setInterval(this.setClockName, 3300);\n    this.timerId2 = window.setInterval(this.setTime, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.timerId);\n    clearInterval(this.timerId2);\n  }\n\n  setClockName = () => {\n    this.setState({\n      clockName: getRandomName(),\n    });\n  };\n\n  setTime = () => {\n    this.setState({\n      today: new Date(),\n    });\n  };\n\n  render() {\n    const { today, clockName } = this.state;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {clockName}\n        </strong>\n\n        {' time is '}\n\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './components/Clock/Clock';\n\ntype State = {\n  hasClock: boolean,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    hasClock: true,\n  };\n\n  componentDidMount() {\n    document.addEventListener('contextmenu', this.toggleClock);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('contextmenu', this.toggleClock);\n  }\n\n  toggleClock = (event: MouseEvent) => {\n    event.preventDefault();\n\n    this.setState(prevState => ({\n      hasClock: !prevState.hasClock,\n    }));\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {this.state.hasClock && <Clock />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}